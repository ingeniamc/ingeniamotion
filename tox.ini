[tox]
requires =
    tox>=4
env_list = coverage, build, docs, format, type, py{39,310,311,312}, virtual

# Use this deps to install custom requirements in develop.
# For instance, to install ingenialink from a custom branch.
# It should be empty in production.
# Use full commit hash
[develop]
    ingenialink = {env:INGENIALINK_INSTALL_PATH:git+https://github.com/ingeniamc/ingenialink-python@22baa6a70dfa5d42f6fe0e1fa20ab18c19f3e0bd}

[testenv]
description = run unit tests
install_command = pip install --trusted-host=pypi.ingenia {opts} {packages}
set_env =
  PIP_EXTRA_INDEX_URL = {env:PIP_EXTRA_INDEX_URL:http://pypi.ingenia/simple/}
deps =
    {[develop]ingenialink}
    pytest==7.0.1
    pytest-cov==2.12.1
    pytest-mock==3.6.1
    ping3==4.0.3
    pytest-html==3.1.1
    pytest-console-scripts==1.4.1
    matplotlib==3.8.2
    {env:FSOE_PACKAGE}
    summit-testing-framework==0.1.4+gd45882c
commands =
    python -I -m pytest {posargs:tests} --import-mode=importlib --cov={envsitepackagesdir}/ingeniamotion --junitxml=pytest_reports/junit-{envname}.xml --junit-prefix={envname}
# Pass the WINDIR environment variable (it is needed by matplotlib).
# Check https://travis-ci.community/t/matplotlib-font-manager-fails-to-find-windir-environment-variable/14145
passenv = WINDIR

[testenv:coverage]
description = combine and export coverage report
skip_install = true
deps =
    pytest==7.0.1
    pytest-cov==2.12.1
commands =
    python -I -m coverage combine {posargs}
    python -I -m coverage xml --include=ingeniamotion/*

[testenv:format]
description = check format
skip_install = true
deps =
    ruff==0.9.2
commands =
    ruff format --check {posargs:ingeniamotion tests examples}
    ruff check {posargs:ingeniamotion tests}
  
[testenv:reformat]
description = reformat files and fix lint errors
skip_install = true
deps =
    ruff==0.9.2
commands =
    ruff format {posargs:ingeniamotion tests examples}
    ruff check --fix {posargs:ingeniamotion tests}

[testenv:type]
description = run type checks
deps =
    {[develop]ingenialink}
    mypy==1.5.1
    types-pywin32==308.0.0.20250128
commands =
    mypy {posargs:ingeniamotion}

[testenv:docs]
description = build documentation
deps =
    {[develop]ingenialink}
    sphinx==7.3.7
    sphinx-rtd-theme==2.0.0
    sphinxcontrib-bibtex==2.6.2
    sphinx_autodoc_typehints==1.12.0
    sphinxcontrib-applehelp==1.0.2
    sphinxcontrib-devhelp==1.0.2
    sphinxcontrib-htmlhelp==2.0.0
    sphinxcontrib-qthelp==1.0.3
    sphinxcontrib-serializinghtml==1.1.9
    sphinxcontrib-jsmath==1.0.1
    nbsphinx==0.9.4
    m2r2==0.3.3
    jinja2==3.1.4
commands =
    python -I -m sphinx -E -b html {posargs:docs _docs}

[testenv:build]
description = build wheels
skip_install = true
deps =
    wheel==0.42.0
    twine==6.0.1
commands =
    python -I setup.py {posargs:build sdist bdist_wheel}
    twine check dist/*
